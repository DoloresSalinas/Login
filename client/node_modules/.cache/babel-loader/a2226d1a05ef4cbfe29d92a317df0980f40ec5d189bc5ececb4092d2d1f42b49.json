{"ast":null,"code":"var _jsxFileName = \"C:\\\\Seguridad-8\\\\client\\\\src\\\\Home.js\";\nimport React, { useEffect } from 'react';\nimport jwt_decode from 'jwt-decode';\nimport Swal from 'sweetalert2';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  const token = localStorage.getItem('token');\n  try {\n    const decode = jwt_decode(token);\n    const currentTime = Date.now() / 1000;\n    if (decode.exp < currentTime) {\n      return true;\n    } else {\n      return false;\n    }\n    if (token && checkTokenExpiration(token)) {\n      Swal.fire({\n        icon: \"error\",\n        title: \"El token ha expirado.\",\n        text: \"Redirigiendo...\",\n        timer: 2000,\n        showConfirmButton: false\n      }).then(() => {\n        navigate(\"/\"); // Esto ahora se ejecuta después de que SweetAlert cierre\n      });\n    }\n  } catch (error) {\n    console.log(\"Error al decodificar el token: \", error);\n    return true;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bienvebido a Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","jwt_decode","Swal","useNavigate","jsxDEV","_jsxDEV","Home","token","localStorage","getItem","decode","currentTime","Date","now","exp","checkTokenExpiration","fire","icon","title","text","timer","showConfirmButton","then","navigate","error","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Seguridad-8/client/src/Home.js"],"sourcesContent":["import React, {useEffect} from 'react';\r\nimport jwt_decode from 'jwt-decode';\r\nimport Swal from 'sweetalert2';\r\nimport { useNavigate } from 'react-router-dom';\r\nconst Home = () => {\r\n  const token = localStorage.getItem('token');\r\n  try{\r\n    const decode = jwt_decode(token);\r\n    const currentTime = Date.now() / 1000;\r\n\r\n    if(decode.exp < currentTime){\r\n      return true;\r\n    }else{\r\n      return false;\r\n    }\r\n\r\n    if (token && checkTokenExpiration(token)) { \r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"El token ha expirado.\",\r\n        text: \"Redirigiendo...\",\r\n        timer: 2000,\r\n        showConfirmButton: false,\r\n      }).then(() => { \r\n        navigate(\"/\");  // Esto ahora se ejecuta después de que SweetAlert cierre\r\n      });\r\n    }\r\n  }catch(error){\r\n    console.log(\"Error al decodificar el token: \", error);\r\n    return true;\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Bienvebido a Home</h1> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,IAAI,MAAM,aAAa;AAC9B,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACjB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAG;IACD,MAAMC,MAAM,GAAGT,UAAU,CAACM,KAAK,CAAC;IAChC,MAAMI,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI;IAErC,IAAGH,MAAM,CAACI,GAAG,GAAGH,WAAW,EAAC;MAC1B,OAAO,IAAI;IACb,CAAC,MAAI;MACH,OAAO,KAAK;IACd;IAEA,IAAIJ,KAAK,IAAIQ,oBAAoB,CAACR,KAAK,CAAC,EAAE;MACxCL,IAAI,CAACc,IAAI,CAAC;QACRC,IAAI,EAAE,OAAO;QACbC,KAAK,EAAE,uBAAuB;QAC9BC,IAAI,EAAE,iBAAiB;QACvBC,KAAK,EAAE,IAAI;QACXC,iBAAiB,EAAE;MACrB,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;QACZC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAE;MAClB,CAAC,CAAC;IACJ;EACF,CAAC,QAAMC,KAAK,EAAC;IACXC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEF,KAAK,CAAC;IACrD,OAAO,IAAI;EACb;EAGA,oBACEnB,OAAA;IAAKsB,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBvB,OAAA;MAAAuB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEV,CAAC;AAAAC,EAAA,GAlCK3B,IAAI;AAoCV,eAAeA,IAAI;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}